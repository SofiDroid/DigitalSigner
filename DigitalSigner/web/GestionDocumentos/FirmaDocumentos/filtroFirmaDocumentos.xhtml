<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui"
      xmlns:sd="http://xmlns.jcp.org/jsf/composite/sofidroid">

    <ui:composition template="/main.xhtml">
        <ui:define id="tmpPrincipal" name="tmpPrincipal">
            <script src="/DigitalSigner/resources/javascript/autoscript.js" type="text/javascript"></script>
            <script src="/DigitalSigner/resources/javascript/firmaelectronica.js" type="text/javascript"></script>
            <p:focus context="filtroCard" />
            <p:confirmDialog global="true" showEffect="fade" hideEffect="fade" width="350">
                <p:commandButton value="#{msg['No']}" type="button" styleClass="ui-confirmdialog-no ui-button-flat"/>
                <p:commandButton value="#{msg['Si']}" type="button" styleClass="ui-confirmdialog-yes" />
            </p:confirmDialog>
            <p:card id="filtroCard" styleClass="card">
                <p:toolbar>
                    <p:toolbarGroup align="left">
                        <p:outputLabel value="Firma de documentos" style="font-size: large; font-weight: bold" /> 
                    </p:toolbarGroup>
                    <p:toolbarGroup align="right">

                        <p:commandButton id="btnFirmar" widgetVar="btnFirmar" icon="pi pi-user-edit" styleClass="rounded-button ui-button-danger"
                                         style="height: 2rem;width: 2rem;margin-left:0.3rem" title="(alt+F) Firmar" action="#{filtroFirmaDocumentos.prepararListaDocumentos}"
                                         update="panelResultado,mensaje" process="@this,tblResultados" accesskey="f" oncomplete="recuperarListaFromBackBean(xhr, status, args)">
                            <p:confirm header="#{msg['confirmacion']}" message="#{msg['confirmacion_firma']}" icon="pi pi-info-circle"/>
                        </p:commandButton>

                        <p:commandButton id="btnBuscar" icon="pi pi-search" styleClass="rounded-button ui-button-info" 
                                         style="height: 2rem;width: 2rem;margin-left:0.3rem" action="#{filtroFirmaDocumentos.buscar}" title="(alt+B) Buscar resultados"
                                         update="panelResultado,mensaje" accesskey="b" />

                        <p:commandButton id="btnLimpiar" icon="pi pi-filter-slash" styleClass="rounded-button ui-button-secondary" 
                                         style="height: 2rem;width: 2rem;margin-left:0.3rem" action="#{filtroFirmaDocumentos.limpiar}" title="(alt+L) Limpiar formulario"
                                         update="fsFiltros,panelResultado,mensaje" accesskey="l" />

                        <p:commandButton id="btnNuevo" icon="pi pi-plus-circle" styleClass="rounded-button ui-button-success" 
                                         style="height: 2rem;width: 2rem;margin-left:0.3rem" action="#{filtroFirmaDocumentos.nuevo}" title="(alt+B) Buscar resultados"
                                         update="panelResultado,mensaje" accesskey="b" />

                    </p:toolbarGroup>
                </p:toolbar>
            </p:card>
            <p:card styleClass="card">
                <p:fieldset id="fsFiltros" legend="#{msg['filtros']}" collapsed="#{!filtroFirmaDocumentos.filtroVisible}" toggleable="true">
                    <p:ajax event="toggle" listener="#{filtroFirmaDocumentos.toggleFiltro}" update="panelResultado"/>
                    <p:panelGrid columns="2"
                     columnClasses="col-6,col-6"
                     layout="grid"
                     styleClass="ui-panelgrid-blank ui-fluid"
                     style="border:0px none; background-color:transparent;">

                        <sd:campoWebTexto id="txtCodigo" beanClass="#{filtroFirmaDocumentos.getcCoDocumento()}" />

                        <sd:campoWebFechaRango id="txtFeAlta" beanClass="#{filtroFirmaDocumentos.getcFeAlta()}" />

                        <sd:campoWebTexto id="txtDescripcion" beanClass="#{filtroFirmaDocumentos.getcDsDocumento()}" />

                        <sd:campoWebFechaRango id="txtFeDesactivo" beanClass="#{filtroFirmaDocumentos.getcFeDesactivo()}" />

                        <sd:campoWebLupa id="txtTipoDocumento" beanClass="#{filtroFirmaDocumentos.getcTipodocumento()}" />
                        
                        <sd:campoWebLupa id="txtSituacionDoc" beanClass="#{filtroFirmaDocumentos.getcSituaciondoc()}" />
                        
                    </p:panelGrid>
                    <p:panelGrid columns="1"
                     columnClasses="col-12"
                     layout="grid"
                     styleClass="ui-panelgrid-blank ui-fluid"
                     style="border:0px none; background-color:transparent;">

                        <sd:campoWebLupa id="txtAutoridad" beanClass="#{filtroFirmaDocumentos.getcAutoridad()}" />
                        
                    </p:panelGrid>
                </p:fieldset>
            </p:card>
            <p:card id="panelResultado" styleClass="card">
                <sd:dataGrid id="tblResultados" dataSet="#{filtroFirmaDocumentos.dsResultado}" />
                <p:dialog id="dlgProgreso" widgetVar="dlgProgreso" modal="true" draggable="false" closable="false" resizable="false" showHeader="false">
                    <i class="pi pi-spin pi-spinner" style="font-size: 1em;margin-right: 5px;margin-top: 20px" /><p:outputLabel id="pbLabel"  value="Iniciando AutoFirma..." style="padding-top: 20px"/>
                    <p:progressBar id="progressBarClient" widgetVar="pbClient" style="width:300px;height:20px;margin-top: 5px;" />
                </p:dialog>
                <p:dialog id="dlgFirmaFinalizada" widgetVar="dlgFirmaFinalizada" modal="true" draggable="false" closable="true" resizable="false" showHeader="true" header="Firma" closeOnEscape="true">
                    <span>Documentos firmados correctamente!</span>
                </p:dialog>
                <script type="text/javascript">
                    //<![CDATA[
                    var pbClient = PF('pbClient');

                    function startProgreso() {
                        PF('btnFirmar').disable();
                        PF('dlgProgreso').show();

                        pbClient.setValue(0);
                    }

                    function refrescarProgreso(actual, total, textoLabel) {
                        if (actual === 0 && total === 0) {
                            document.getElementById('formulario:pbLabel').innerHTML = textoLabel;
                        }
                        else {
                            var porcentaje = Math.round(((actual+1) * 100)/total);

                            pbClient.setValue(porcentaje);
                            document.getElementById('formulario:pbLabel').innerHTML = 'Firmando elemento ' + (actual+1) + ' de ' + total + '...(' + porcentaje + '%)';
                        }
                    }

                    function cancelProgreso() {
                        pbClient.setValue(0);

                        PF('dlgProgreso').hide();
                        PF('btnFirmar').enable();
                    }

                    function EndProgreso() {
                        pbClient.setValue(0);

                        PF('dlgProgreso').hide();
                        PF('btnFirmar').enable();

                        PF('dlgFirmaFinalizada').show();
                    }

                    //]]>
                </script>
                <script>
                        var listaDocumentosFirma;
                        var tipoFirma;
                        function recuperarListaFromBackBean(xhr, status, args) {
                            listaDocumentosFirma = args.listaDocumentos;
                            tipoFirma = args.listaTiposFirma;
                            
                            if (listaDocumentosFirma !== '') {
                                listaDocumentosFirma = listaDocumentosFirma.split(";");
                                tipoFirma = tipoFirma.split(";");

                                firmarDocumentos();
                            } else {
                                PF('mensaje').renderMessage({"summary":"Informaci√≥n",
                                                             "detail":"Debe seleccionar al menos un documento a firmar.",
                                                             "severity":"warn"});
                            }
                        }
                </script>
                <script type="text/javascript">
                    //<![CDATA[
                    var data = "";
                    var params = "";
                    var boUsarServlets = true;

                    // URL de los servlets de subida y bajada del documento y el trifase
                    var urlServiciosIntermedios = "#{filtroFirmaDocumentos.getHostServlets()}";
                    //var urlServiciosIntermedios = "http://localhost:92/firmaServlets/";


                    var paramsInit = "";
                    paramsInit = paramsInit + "policyIdentifier=urn:oid:2.16.724.1.3.1.1.2.1.9\n";
                    paramsInit = paramsInit + "policyIdentifierHash=G7roucf600+f03r/o0bAOQ6WAs0=\n";
                    paramsInit = paramsInit + "policyIdentifierHashAlgorithm=http://www.w3.org/2000/09/xmldsig#sha1\n";
                    paramsInit = paramsInit + "referencesDigestMethod=http://www.w3.org/2001/04/xmlenc#sha256\n";
                    paramsInit = paramsInit + "policyQualifier=https://sede.060.gob.es/politica_de_firma_anexo_1.pdf\n";
                    //paramsInit = paramsInit + "serverUrl=" + urlServiciosIntermedios + "trifase/SignatureService\n";
                    paramsInit = paramsInit + "format=XAdES Detached\n";
                    paramsInit = paramsInit + "mode=implicit\n";
                    paramsInit = paramsInit + "headless=true\n";
                    paramsInit = paramsInit + "#{filtroFirmaDocumentos.certificadosAdmitidos}";
                    params = paramsInit;

                    var SN = "";
                    var numSeleccionados = 0;

                    var maxSize = 10485760;

                    var aplicacionFirmaIniciada = false;
                    var boReintentar = false;

                    function firmarDocumentos()
                    {
                        try {
                            if (listaDocumentosFirma !== "")
                            {
                                startProgreso();

                                numSeleccionados = (listaDocumentosFirma === undefined || listaDocumentosFirma === null ? 0 : listaDocumentosFirma.length);


                                PrimeFaces.info('Iniciando aplicaci√≥n de autoFirma...'); //LOG
                                refrescarProgreso(0,0,'Iniciando aplicaci√≥n de autoFirma...');
                                //refrescarEstado("");

                                iniciarAplicacionAutoFirma(iniciarAutoFirmaOK, iniciarAutoFirmaERROR);
                            }
                        }
                        catch (e) {
                            cancelProgreso();
                        }
                    }

                    function iniciarAplicacionAutoFirma(functionOK, functionERROR)
                    {
                        if (aplicacionFirmaIniciada) {
                            functionOK();
                        }
                        else {
                            iniciarAutoFirma(functionOK, functionERROR);
                        }
                        aplicacionFirmaIniciada = true;
                    }

                    function iniciarAutoFirma(functionOK, functionERROR)
                    {
                        try
                        {
                            PrimeFaces.info('iniciarAutoFirma');
                            var sModoFirma = "#{datosUsuario.getModoFirma()}";
                            PrimeFaces.info('Modo Firma: ' + sModoFirma);
                            PrimeFaces.info('AutoFirma (Trifasico/WebSockets)');

                            AutoScript.cargarAppAfirma('./');

                            var ipClient = "#{datosUsuario.getIpRemota()}";
                            var ipExtranet = "#{datosUsuario.getIpExtranet()}";

                            PrimeFaces.info('IP Local: ' + ipClient);
                            PrimeFaces.info('IP Extranet: ' + ipExtranet);
                            PrimeFaces.info('Extranet: ' + !((ipClient.indexOf('10.')) === 0 && (ipClient !== ipExtranet)));
                            if (sModoFirma === '2' || sModoFirma === '3')
                            {
                                PrimeFaces.info('Firma Trifasica: ERROR (Forzado a Sockets monofase)');
                                boUsarServlets = false;

                                functionOK();
                            } else
                            {
                                if ((ipClient.indexOf('10.')) === 0 && (ipClient !== ipExtranet))
                                {
                                    // prueba a llamar al servlet trifase
                                    probarDisponibilidadServlets(functionOK, functionERROR, urlServiciosIntermedios + "trifase/SignatureService");
                                } else
                                {
                                    disponibleERROR(functionOK, functionERROR);
                                }
                            }
                        } catch (ex)
                        {
                            alertarError('en iniciarAutoFirma', ex);
                            functionERROR(ex);
                        }
                    }

                    function disponibleOK(functionOK, functionERROR)
                    {
                        PrimeFaces.info('Firma Trifasica: OK');
                        boUsarServlets = true;

                        // URL del servlet StorageService
                        var storageService = urlServiciosIntermedios + 'guardar/StorageService';

                        // URL del servlet RetrieveService
                        var retrieveService = urlServiciosIntermedios + 'recuperar/RetrieveService';

                        AutoScript.setServlets(storageService, retrieveService);
                        PrimeFaces.info('Servlets de intercambio Trifasico: ');
                        PrimeFaces.info('Servlets Recuperar: ' + urlServiciosIntermedios + 'recuperar/RetrieveService');
                        PrimeFaces.info('Servlets Guardar: ' + urlServiciosIntermedios + 'guardar/StorageService');

                        functionOK();
                    }

                    function disponibleERROR(functionOK, functionERROR) {
                        PrimeFaces.info('Firma Trifasica: ERROR (se usar√°n Sockets monofase)');
                        boUsarServlets = false;

                        functionOK();
                    }

                    function iniciarAutoFirmaOK()
                    {
                        PrimeFaces.info('Iniciando la firma...');
                        refrescarProgreso(0,0,'Iniciando la firma...');
                        //refrescarEstado("");

                        AutoScript.setStickySignatory(true);

                        posicion = 0;
                        firmar(posicion);
                    }

                    function firmar(elemento)
                    {
                        if (boReintentar)
                        {
                            //Si estamos reintentando, voy a esperar un poco entre firma y firma
                            refrescarProgreso(elemento, numSeleccionados);
                            //refrescarEstado(" (Reintentando)");
                            setTimeout(function ()
                            {
                                firmarAux(elemento);
                            }, tiempoEspera);
                        } else
                        {
                            firmarAux(elemento);
                        }
                    }

                    function firmarAux(elemento)
                    {

                        PrimeFaces.info('Elemento = ' + elemento);
                        PrimeFaces.info('listaDocumentosFirma.size() => ' + listaDocumentosFirma.length);
                        PrimeFaces.info('listaDocumentosFirma[elemento] = ' + listaDocumentosFirma[elemento]);

                        PrimeFaces.info('Descargando: ' + listaDocumentosFirma[elemento]);
                        refrescarProgreso(0,0,'Descargando elemento: ' + listaDocumentosFirma[elemento]);

                        try
                        {
                            var xmlHttpReq = false;
                            var self = this;

                            //refrescarEstado(" (Descargando)");
                            PrimeFaces.info('(Descargando)');

                            // Mozilla/Safari
                            if (window.XMLHttpRequest)
                            {
                                self.xmlHttpReq = new XMLHttpRequest();
                            } else if (window.ActiveXObject) // IE
                            {
                                self.xmlHttpReq = new ActiveXObject("Microsoft.XMLHTTP");
                            }

                            if (boUsarServlets) {
                                //SERVLET PARA TRIFASICO
                                self.xmlHttpReq.open('POST', "entradaFicheroAutoFirma", true);
                            } else
                            {
                                //SERVLET PARA MONOFASICO
                                self.xmlHttpReq.open('POST', "bajadaFicheroFirma", true);
                            }

                            self.xmlHttpReq.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

                            self.xmlHttpReq.onreadystatechange = function ()
                            {
                                if (self.xmlHttpReq.readyState === 4)
                                {
                                    if (self.xmlHttpReq.status !== 200) {
                                        PrimeFaces.error('Error en respuesta de servlet de bajada de documento.');
                                    }
                                    else {
                                        PrimeFaces.error('Tipo Firma (0-Firma, 1-Contrafirma) =  ' + tipoFirma[elemento]);
                                        if (tipoFirma[elemento] === "0")
                                        {
                                            var respuesta = self.xmlHttpReq.responseText;
                                            PrimeFaces.error(respuesta);
                                            endDownloadParaFirma(respuesta, listaDocumentosFirma[elemento], elemento);
                                        } else if (tipoFirma[elemento] === "1")
                                        {
                                            endDownloadParaContraFirma(self.xmlHttpReq.responseText, listaDocumentosFirma[elemento], elemento);
                                        }
                                    }
                                }
                            };

                            PrimeFaces.info('Envio paramero fichero a servlet de descarga del documento: ' + 'fichero=' + listaDocumentosFirma[elemento]);
                            self.xmlHttpReq.send('indexFichero=' + listaDocumentosFirma[elemento]);

                            return 0;

                        } catch (e)
                        {
                            posicion = 0;
                            alertarError("Error Firma 2", e);
                            cancelProgreso();
                            //mandarRefrescarListado();
                        }
                    }

                    // Firma
                    function endDownloadParaFirma(str, elemento, i)
                    {
                        refrescarProgreso(i, numSeleccionados);
                        PrimeFaces.info('(Firmando)');

                        setTimeout(function ()
                        {
                            try
                            {
                                PrimeFaces.info("Firmando: " + elemento);

                                if (str !== undefined && str !== null && str !== "")
                                {
                                    configuraParams();

                                    if (boUsarServlets) {
                                        PrimeFaces.info('El hash del fichero ' + elemento + ' es: ' + str);
                                        PrimeFaces.info('Tipo Firma: XAdEStri');
                                        AutoScript.sign(str, "SHA256withRSA", "XAdEStri", params, 
                                            function prefirmaNotificacionSuccess(firmaBase64, certificadoB64)
                                            {
                                                firmaNotificacionSuccess(firmaBase64, certificadoB64, elemento, i);
                                            }, 
                                            firmaNotificacionError
                                        );
                                    } else {
                                        PrimeFaces.info('El fichero ' + elemento + ' pesa: ' + bytesToString(str.length, false) + ' (' + str.length + ')');
                                        PrimeFaces.info('Tipo Firma: XAdES');
                                        AutoScript.sign(str, "SHA256withRSA", "XAdES", params, 
                                            function prefirmaNotificacionSuccess(firmaBase64, certificadoB64)
                                            {
                                                firmaNotificacionSuccess(firmaBase64, certificadoB64, elemento, i);
                                            }, 
                                            firmaNotificacionError
                                        );
                                    }
                                } 
                                else 
                                {
                                    //Si no viene documento, paso al siguiente
                                    PrimeFaces.info('endDownloadParaFirma: No viene documento, str vac√≠o. Rellamada.');
                                    rellamada();
                                }
                            } catch (e)
                            {
                                posicion = 0;
                                alertarError("Firma cancelada: " + AutoScript.getErrorMessage(), e);
                                cancelProgreso();
                                //mandarRefrescarListado();
                            }
                        }, 10);
                    }

                    // CoFirma
                    function endDownloadParaContraFirma(str, elemento, i)
                    {
                        PrimeFaces.info('llamada a endDownloadParaContraFirma(str, elemento, i)');
                        PrimeFaces.info('str lenght = ' + str.length);
                        PrimeFaces.info('elemento = ' + elemento);
                        PrimeFaces.info('i = ' + i);

                        //refrescarEstado(" (Contra-Firmando)");
                        refrescarProgreso(i, numSeleccionados);
                        PrimeFaces.info(' (Contra-Firmando)');

                        setTimeout(function ()
                        {
                            try
                            {
                                PrimeFaces.info('Contra Firmando: ' + elemento);

                                if (str !== undefined && str !== null && str !== "")
                                {
                                    configuraParams();

                                    if (boUsarServlets) {
                                        PrimeFaces.info('El hash del fichero ' + elemento + ' es: ' + str);

                                        PrimeFaces.info('Tipo Contra-Firma: XAdEStri');
                                        PrimeFaces.info('llamando a AutoScript.counterSign(...)');
                                        AutoScript.counterSign(str, "SHA256withRSA", "XAdEStri", params, 
                                            function prefirmaNotificacionSuccess(firmaBase64, certificadoB64)
                                            {
                                                PrimeFaces.info('La contrafirma devuelve:');
                                                PrimeFaces.info('firmaBase64 lenght = ' + firmaBase64.length);
                                                PrimeFaces.info('certificadoB64  lenght = ' + certificadoB64.length);

                                                firmaNotificacionSuccess(firmaBase64, certificadoB64, elemento, i);
                                            }, 
                                            firmaNotificacionError
                                        );
                                    } else {
                                        PrimeFaces.info('El fichero ' + elemento + ' su pesa ' + bytesToString(str.length, false) + ' (' + str.length + ')');

                                        PrimeFaces.info('Tipo Contra-Firma: XAdES');
                                        AutoScript.counterSign(str, "SHA256withRSA", "XAdES", params, 
                                            function prefirmaNotificacionSuccess(firmaBase64, certificadoB64)
                                            {
                                                firmaNotificacionSuccess(firmaBase64, certificadoB64, elemento, i);
                                            }, 
                                            firmaNotificacionError
                                        );
                                    }
                                } 
                                else
                                {
                                    //Si no viene documento, paso al siguiente
                                    rellamada();
                                }
                            } catch (e)
                            {
                                posicion = 0;
                                alertarError("Contra-Firma cancelada: " + AutoScript.getErrorMessage(), e);
                                cancelProgreso();
                                //mandarRefrescarListado();
                            }
                        }, 10);
                    }

                    function firmaNotificacionSuccess(firmaBase64, certificadoB64, elemento, i)
                    {
                        subeFirmado(firmaBase64, elemento, i);
                    }

                    function firmaNotificacionError(tipoError, mensaje)
                    {
                        posicion = 0;
                        alertarError("Firma cancelada: " + mensaje, null);
                        cancelProgreso();
                        //mandarRefrescarListado();
                    }

                    function subeFirmado(docFirmado, elemento, i)
                    {
                        refrescarProgreso(i + 1, numSeleccionados);
                        PrimeFaces.info(' (Subiendo)');

                        setTimeout(function ()
                        {
                            try
                            {
                                PrimeFaces.info('Subiendo: ' + elemento);
                                if (boUsarServlets) {
                                    if (docFirmado.length < 255) {
                                        nombreFirmado = Base64.decode(docFirmado);
                                    }
                                    else {
                                        nombreFirmado = Base64.decode(docFirmado).substring(1,255);
                                    }
                                    PrimeFaces.info('El fichero a subir ' + elemento + ' tiene el nombre de fichero: ' + nombreFirmado);
                                }
                                else {
                                    PrimeFaces.info('El fichero a subir ' + elemento + ' pesa ' + bytesToString(docFirmado.length, false) + ' (' + docFirmado.length + ')');
                                }
                                var self = this;
                                // Mozilla/Safari
                                if (window.XMLHttpRequest)
                                {
                                    self.xmlHttpReq = new XMLHttpRequest();
                                }
                                // IE
                                else if (window.ActiveXObject)
                                {
                                    self.xmlHttpReq = new ActiveXObject("Microsoft.XMLHTTP");
                                }

                                if (boUsarServlets) {
                                    // SERVLET PARA TRIFASICO
                                    PrimeFaces.info('Servlet de salida trifasico: ' + 'salidaFicheroAutoFirma');
                                    self.xmlHttpReq.open('POST', "salidaFicheroAutoFirma", true);
                                } else {
                                    // SERVLET PARA MONOFASICO
                                    PrimeFaces.info('Servlet de salida monofasico: ' + 'subidaFicheroFirmado');
                                    self.xmlHttpReq.open('POST', "subidaFicheroFirmado", true);
                                }

                                self.xmlHttpReq.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
                                self.xmlHttpReq.onreadystatechange = function ()
                                {
                                    if (self.xmlHttpReq.readyState === 4)
                                    {
                                        if (self.xmlHttpReq.status !== 200)
                                        {
                                            PrimeFaces.Error('Error en respuesta servlet de subida de fichero.');
                                            //Si la respuesta es de error, termino el proceso
                                            posicion = listaDocumentosFirma.length;

                                            refrescarProgreso(0,0, "Error en respuesta de servlet de subida de fichero.");
                                            //refrescarEstado("");
                                        }

                                        rellamada();
                                    }
                                };
                                PrimeFaces.info('encodeURIComponent(docFirmado): ' + encodeURIComponent(docFirmado));
                                self.xmlHttpReq.send("indexFichero=" + elemento + "&data2=" + encodeURIComponent(docFirmado));
                            } catch (e)
                            {
                                posicion = 0;
                                alertarError("Error Firma 3.2", e);
                                cancelProgreso();
                                //mandarRefrescarListado();
                            }
                        }, 10);
                    }

                    function rellamada()
                    {
                        posicion = posicion + 1;
                        if (posicion < listaDocumentosFirma.length) {
                            firmar(posicion);
                        }
                        else {
                            //setProgreso(100, "Terminado");
                            //refrescarEstado(" (actualizando)");
                            PrimeFaces.info(' (actualizando)');
                            setTimeout(finalizarFirma, 10);
                        }
                    }

                    function finalizarFirma()
                    {
                        EndProgreso();
                        PrimeFaces.info('Firma finalizada');
                    }

                    function iniciarAutoFirmaERROR(e)
                    {
                        posicion = 0;

                        if (errorAutofirma === true)
                        {
                            var errorMensaje = "Error en el arranque de Autofirma. Compruebe que no se est√° bloqueando la aplicaci√≥n y que la versi√≥n de java est√° correctamente instalada.";
                            PF('mensaje').renderMessage({"summary":"Error",
                                                         "detail":errorMensaje,
                                                         "severity":"error"});
                        }
                        alertarError("Error Firma 1", e);
                        cancelProgreso();

                        try {
                           iniciarAplicacionFirma(iniciarAutoFirmaOK, iniciarAutoFirmaERROR);
                        } catch (e2) {
                            alertarError("Error Firma 1.1: Imposible reiniciar la aplicaci√≥n de firma", e2);
                        }
                    }

                    function mandarRefrescarListado()
                    {
                        try
                        {
                            //toSrvLog(SDElementoPorId("progreso").innerHTML);
                            //SDElementoPorId('btnActualizarArbol').click();
                        } catch (e)
                        {
                            //alertarError("mandarRefrescarListado", e);
                        }
                    }

                    function configuraParams()
                    {
                        if (boUsarServlets) {
                            paramsInit = paramsInit + "serverUrl=" + urlServiciosIntermedios + "trifase/SignatureService\n";
                        }
                        params = paramsInit;
                    }

                    function bytesToString(bytes, si) {
                        var thresh = si ? 1000 : 1024;
                        if (Math.abs(bytes) < thresh) {
                            return bytes + ' B';
                        }
                        var units = si
                                ? ['kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']
                                : ['KiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];
                        var u = -1;
                        do {
                            bytes /= thresh;
                            ++u;
                        } while (Math.abs(bytes) >= thresh && u < units.length - 1);
                        return bytes.toFixed(1) + ' ' + units[u];
                    }

                    function alertarError(msg, ex)
                    {
                        try
                        {
                            try
                            {
                                if (ex !== undefined && ex !== null)
                                {
                                    if (ex.message !== undefined && ex.message !== null)
                                        msg = msg + "\r\n(" + ex.message + ")";
                                    else
                                        msg = msg + "\r\n(" + ex.toString() + ")";

                                    if (ex.stack !== undefined && ex.stack !== null)
                                        msg = msg + "\r\n" + ex.stack;
                                }
                            } catch (e) {
                            } //Vac√≠o

                            PrimeFaces.info(msg);
                            PF('mensaje').renderMessage({"summary":"Error",
                                                         "detail":msg,
                                                         "severity":"error"});
                        } catch (e2)
                        {
                            PrimeFaces.info(msg + e2.toString());
                            PF('mensaje').renderMessage({"summary":"Error",
                                                         "detail":msg + e2.toString(),
                                                         "severity":"error"});
                        }
                    }
                    //]]>
                </script>
            </p:card>
            <p:log id="logFirma" widgetVar="logFirma" rendered="false" />
        </ui:define>
    </ui:composition>
</html>
