/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package generarmantenimiento_interfaz;

import generarmantenimiento.GeneradorJPABean;
import generarmantenimiento.GeneradorSTDS;
import generarmantenimiento.Utils;
import java.awt.FileDialog;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.*;

/**
 *
 * @author Jorge
 */
public class GenerarMantenimientoInterfaz extends javax.swing.JFrame {

    //DigitalSigner
    private final static String USER_DS = "sa";
    private final static String PASS_DS = "Tharon1983";
    private final static String URL_DS = "jdbc:sqlserver://localhost\\SQLEXPRESS:1433;databaseName=DigitalSigner;encrypt=false";

    private static String USER;
    private static String PASS;
    private static String URL;

    /**
     * Creates new form GenerarMantenimientoInterfaz
     */
    public GenerarMantenimientoInterfaz() {
        initComponents();
        ConfiguradorImg configIcon = new ConfiguradorImg();
        configIcon.escalarImagenButton(jButton3, 20, -1);
        
        jRadioButton1.setSelected(true);
        jRadioButton1ActionPerformed(null);
    }

    public File SaveFileToDirectory() {
        
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Directorio donde guardar");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    //
        // disable the "All files" option.
        //
        chooser.setAcceptAllFileFilterUsed(false);
        //    
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            return chooser.getSelectedFile();

        } else {
            return null;
        }
    }

    public void SaveFileTo(String myLines, String nombreTabla) {
        FileOutputStream f = null;
        DataOutputStream h = null;
        FileDialog d = new FileDialog(new JFrame(), "Guardar", FileDialog.SAVE);
        d.setFile(nombreTabla);
        d.setVisible(true);
        if (d.getDirectory() == null || d.getFile() == null) {
            JOptionPane.showMessageDialog(this, "Fichero NO guardado.");
            return;
        }
        String dir;
        dir = d.getDirectory();
        File oneFile = new File(dir + d.getFile());
        try {
            oneFile.createNewFile();
        } catch (IOException e1) {
        }
        try {
            f = new FileOutputStream(oneFile);
            h = new DataOutputStream(f);
            h.write(myLines.getBytes("UTF-8"));
            JOptionPane.showMessageDialog(this, "Fichero guardado.");
        } catch (IOException e) {
        } finally {
            try {
                h.close();
                f.close();
            } catch (IOException e) {
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this
     * method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane3 = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextPane4 = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        jScrollPane1.setViewportView(jTextPane1);

        jScrollPane2.setViewportView(jTextPane2);

        jScrollPane3.setViewportView(jTextPane3);

        jScrollPane4.setViewportView(jTextPane4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTextField1.setText("BD_");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel1.setText("Tabla");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Entorno");

        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("DigitalSigner");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 255));
        jLabel5.setText("Generador de Clases DigitalSigner");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton1.setText("Servicio Técnico");
        jButton1.setToolTipText("Generar servicio técnico");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton2.setText("JPA Bean");
        jButton2.setToolTipText("Generar JPA Bean");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setText("Generar");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/generarmantenimiento_interfaz/img/limpiar.png"))); // NOI18N
        jButton3.setToolTipText("Limpiar");
        jButton3.setName(""); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(29, 29, 29)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jRadioButton1)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jLabel7))
                .addGap(22, 22, 22))
        );

        jButton3.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText(null);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try
        {
            String tabla = jTextField1.getText();
            tabla = tabla.toUpperCase();
            boolean continuar = true;
            if (tabla.equals(""))
            {
                JOptionPane.showMessageDialog(this, "Rellene el nombre de la tabla");
                continuar = false;
            }
            if (continuar)
            {
                ArrayList<String> tablas = Utils.leerTablas(tabla, USER, PASS, URL, null);
                File save=null;
                if(tablas.size()>1)
                {
                    save=SaveFileToDirectory();
                }
                jProgressBar1.setMinimum(0);
                jProgressBar1.setMaximum(tablas.size());
                jProgressBar1.setValue(0);
                jProgressBar1.setStringPainted(true);
                for (String tabla1 : tablas)
                {
                    String plantillaJPABean = null;
                    if (jRadioButton1.isSelected()) { //FORMACIÓN
                        //plantillaJPABean=GeneradorJPABean.generarJPABean(tabla1, paquete, autor, USER, PASS, URL);
                    } else
                    {
                        JOptionPane.showMessageDialog(this, "Debe seleccionar un entorno de BBDD antes.");
                        return;
                    }
                    if (plantillaJPABean != null)
                    {
                        if (!plantillaJPABean.equals("VACIO"))
                        {
                            if(tablas.size()<=1)
                            {
                                String[] options = {"Portapapeles", "Archivo"};
                                int x = JOptionPane.showOptionDialog(this, "¿Donde quiere guardar?", "Guardar", JOptionPane.DEFAULT_OPTION,
                                    JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                                if (x == 0)
                                {
                                    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                                    StringSelection data = new StringSelection(plantillaJPABean);
                                    clipboard.setContents(data, data);
                                    JOptionPane.showMessageDialog(this, "JPA Bean copiado en el portapapeles.");
                                } else
                                {
                                    SaveFileTo(plantillaJPABean, GeneradorJPABean.transformarNombreObjeto(tabla1, true) + ".java");
                                }
                            }else
                            {
                                SaveFile(plantillaJPABean, GeneradorJPABean.transformarNombreObjeto(tabla1, true) + ".java",save);
                            }
                        } else
                        {
                            JOptionPane.showMessageDialog(this, "Por algún motivo no se ha encontrado la tabla " + tabla1);
                        }
                    } else
                    {
                        JOptionPane.showMessageDialog(this, "ERROR. Plantilla vacía.");
                        return;
                    }

                    jProgressBar1.setValue(jProgressBar1.getValue()+1);
                    jProgressBar1.doLayout();

                }
                JOptionPane.showMessageDialog(this, "Generado JPA BEAN");
            }

        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "No se ha podido generar el JPA Bean.");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try
        {
            String tabla = jTextField1.getText();
            tabla = tabla.toUpperCase();
            boolean continuar = true;

            if (tabla.equals(""))
            {
                JOptionPane.showMessageDialog(this, "Rellene el nombre de la tabla");
                continuar = false;
            }

            if (continuar)
            {
                ArrayList<String> tablas = Utils.leerTablas(tabla, USER, PASS, URL, null);
                File save=null;
                if(tablas.size()>1)
                {
                    save=SaveFileToDirectory();
                }
                jProgressBar1.setMinimum(0);
                jProgressBar1.setMaximum(tablas.size());
                jProgressBar1.setValue(0);
                jProgressBar1.setStringPainted(true);

                for (String tabla1 : tablas)
                {
                    String plantillaST = null;
                    if (jRadioButton1.isSelected()) { //DigitalSigner
                        plantillaST = GeneradorSTDS.generarST(tabla1, USER, PASS, URL);
                    } else
                    {
                        JOptionPane.showMessageDialog(this, "Debe seleccionar un entorno de BBDD antes.");
                        return;
                    }
                    if (plantillaST != null)
                    {
                        if (!plantillaST.equals("VACIO"))
                        {
                            if(tablas.size()<=1)
                            {
                                String[] options = {"Portapapeles", "Archivo"};
                                int x = JOptionPane.showOptionDialog(this, "¿Donde quiere guardar?", "Guardar", JOptionPane.DEFAULT_OPTION,
                                    JOptionPane.INFORMATION_MESSAGE, null, options, options[0]);
                                if (x == 0)
                                {
                                    Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
                                    StringSelection data = new StringSelection(plantillaST);
                                    clipboard.setContents(data, data);
                                    JOptionPane.showMessageDialog(this, "Servicio Tecnico copiado en el portapapeles.");
                                } else
                                {
                                    SaveFileTo(plantillaST, GeneradorSTDS.transformarNombreClase(tabla1) + ".java");
                                }
                            }else
                            {
                                SaveFile(plantillaST, GeneradorSTDS.transformarNombreClase(tabla1) + ".java",save);
                            }
                        } else
                        {
                            JOptionPane.showMessageDialog(this, "Por algún motivo no se ha encontrado la tabla " + tabla1);
                        }
                    } else
                    {
                        JOptionPane.showMessageDialog(this, "ERROR. Plantilla vacía.");
                        return;
                    }
                    jProgressBar1.setValue(jProgressBar1.getValue()+1);
                }
                JOptionPane.showMessageDialog(this, "Generado SERVICIO TECNICO");
            }

        } catch (Exception e)
        {
            JOptionPane.showMessageDialog(this, "No se ha podido generar el servicio técnico.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        USER = USER_DS;
        PASS = PASS_DS;
        URL = URL_DS;
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GenerarMantenimientoInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GenerarMantenimientoInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GenerarMantenimientoInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GenerarMantenimientoInterfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GenerarMantenimientoInterfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JTextPane jTextPane3;
    private javax.swing.JTextPane jTextPane4;
    // End of variables declaration//GEN-END:variables

    private void SaveFile(String plantillaJPABean, String tabla, File save) {
         FileOutputStream f = null;
        DataOutputStream h = null;
        
        try {
            f = new FileOutputStream(new File(save.getAbsolutePath()+"\\"+tabla));
            h = new DataOutputStream(f);
            h.write(plantillaJPABean.getBytes("UTF-8"));
            
        } catch (IOException e) {
        } finally {
            try {
                h.close();
                f.close();
            } catch (IOException e) {
            }
        }}
}
